import*as e from"react";import{KeyFilter as t}from"primereact/keyfilter";import{Tooltip as n}from"primereact/tooltip";import{ObjectUtils as o,classNames as r,mergeProps as l,DomHandler as a}from"primereact/utils";import{ComponentBase as i}from"primereact/componentbase";import{PrimeReactContext as p}from"primereact/api";function u(){return u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},u.apply(this,arguments)}var f=i.extend({defaultProps:{__TYPE:"InputText",keyfilter:null,validateOnly:!1,tooltip:null,tooltipOptions:null,onBeforeInput:null,onInput:null,onKeyDown:null,onPaste:null,children:void 0}}),s=e.memo(e.forwardRef((function(i,s){var m=e.useContext(p),c=f.getProps(i,m),y=f.setMetaData({props:c}).ptm,d=e.useRef(s);e.useEffect((function(){o.combinedRefs(d,s)}),[d,s]);var v=e.useMemo((function(){return o.isNotEmpty(c.value)||o.isNotEmpty(c.defaultValue)}),[c.value,c.defaultValue]),O=o.isNotEmpty(c.tooltip),I=r("p-inputtext p-component",{"p-disabled":c.disabled,"p-filled":v},c.className),P=l({ref:d,className:I,onBeforeInput:function(e){c.onBeforeInput&&c.onBeforeInput(e),c.keyfilter&&t.onBeforeInput(e,c.keyfilter,c.validateOnly)},onInput:function(e){var n=e.target,r=!0;c.keyfilter&&c.validateOnly&&(r=t.validate(e,c.keyfilter)),c.onInput&&c.onInput(e,r),o.isNotEmpty(n.value)?a.addClass(n,"p-filled"):a.removeClass(n,"p-filled")},onKeyDown:function(e){c.onKeyDown&&c.onKeyDown(e),c.keyfilter&&t.onKeyPress(e,c.keyfilter,c.validateOnly)},onPaste:function(e){c.onPaste&&c.onPaste(e),c.keyfilter&&t.onPaste(e,c.keyfilter,c.validateOnly)}},f.getOtherProps(c),y("root"));return e.createElement(e.Fragment,null,e.createElement("input",P),O&&e.createElement(n,u({target:d,content:c.tooltip},c.tooltipOptions,{pt:y("tooltip")})))})));s.displayName="InputText";export{s as InputText};
